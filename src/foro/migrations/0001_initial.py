# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-23 19:10
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(db_index=True, help_text='Forum Title', max_length=60, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='Forum Description', null=True, verbose_name='Description')),
                ('style_css', models.TextField(blank=True, help_text="Forum Style CSS, e.g. <i class='fa fa-fw fa-4x fa-user'></i>", null=True, verbose_name='Style CSS')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'title', unique=True)),
                ('author', models.ForeignKey(blank=True, help_text='Forum Author', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authored_forums', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'forum',
                'verbose_name_plural': 'forums',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(db_index=True, help_text='Post Title', max_length=60, verbose_name='Title')),
                ('body', models.TextField(help_text='Post Content', max_length=10000, verbose_name='Content')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'title', unique=True)),
                ('author', models.ForeignKey(blank=True, help_text='Post Author', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authored_forum_posts', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(db_index=True, help_text='Section Title', max_length=60, verbose_name='Title')),
                ('order', models.PositiveIntegerField(default=0, help_text='Section Order (auto-incremented)', verbose_name='Order')),
                ('author', models.ForeignKey(blank=True, help_text='Section Author', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authored_forum_sections', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(db_index=True, help_text='Topic Title', max_length=60, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='Topic Description', null=True, verbose_name='Description')),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from=b'title', unique=True)),
                ('author', models.ForeignKey(blank=True, help_text='Topic Author', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authored_forum_topics', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('forum', models.ForeignKey(help_text='Forum', on_delete=django.db.models.deletion.CASCADE, related_name='related_topics', to='foro.Forum', verbose_name='Forum')),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'topic',
                'verbose_name_plural': 'topics',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='topic',
            field=models.ForeignKey(blank=True, help_text='Post Topic', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_posts', to='foro.Topic', verbose_name='Topic'),
        ),
        migrations.AddField(
            model_name='forum',
            name='section',
            field=models.ForeignKey(help_text='Forum Section', on_delete=django.db.models.deletion.CASCADE, related_name='related_forums', to='foro.Section', verbose_name='Section'),
        ),
    ]
